{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["let testcase = [[[1, 3, 5, 6], 5], [[1, 3, 5, 6], 2], [[1, 3, 5, 6], 7]]\n\nfunction searchInsert(nums: number[], target: number): number {\n  /*\n  # Description for array v:\n  #   - v[0] = input array and also pointer right\n  #   - v[1] = pointer left\n  #   - v[2] = middle element of the input array ((v[0].length - v[1]) / 2)\n  #   - v[4] = input target\n  */\n  let v: [number[], number, number, number] = [nums, 0, 0, target]\n  while (v[1] < v[0].length) {\n    v[2] = v[1] + Math.floor((v[0].length - v[1]) / 2)\n    if (nums[v[2]] === v[3]) {\n      return v[2]\n    } else if (nums[v[2]] > v[3]) {\n      v[0].length = v[2]\n    } else {\n      v[1] = v[2] + 1\n    }\n  }\n  return v[1]\n};\n\nfor (let i = 0; i < testcase.length; i++) {\n  console.log(searchInsert(testcase[i][0] as number[], testcase[i][1] as number))\n}"],
  "mappings": "AAAA,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI;AAErE,sBAAsB,MAAgB,QAAwB;AAQ5D,MAAI,IAAwC,CAAC,MAAM,GAAG,GAAG;AACzD,SAAO,EAAE,KAAK,EAAE,GAAG,QAAQ;AACzB,MAAE,KAAK,EAAE,KAAK,KAAK,MAAO,GAAE,GAAG,SAAS,EAAE,MAAM;AAChD,QAAI,KAAK,EAAE,QAAQ,EAAE,IAAI;AACvB,aAAO,EAAE;AAAA,eACA,KAAK,EAAE,MAAM,EAAE,IAAI;AAC5B,QAAE,GAAG,SAAS,EAAE;AAAA,WACX;AACL,QAAE,KAAK,EAAE,KAAK;AAAA;AAAA;AAGlB,SAAO,EAAE;AAAA;AACV;AAED,SAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,UAAQ,IAAI,aAAa,SAAS,GAAG,IAAgB,SAAS,GAAG;AAAA;",
  "names": []
}
